name: Validate PR

on:
  workflow_call:
    inputs:
      java_version:
        required: true
        type: string
    secrets:
      snyk_auth_token:
        required: true
      github_repo_actor:
        required: true
      github_repo_token:
        required: true
      docker_username:
        required: true
      docker_password:
        required: true
  workflow_dispatch:

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Check PR and commit formats
      uses: gsactions/commit-message-checker@v1
      if: github.event_name != 'workflow_dispatch'
      with:
        pattern: '^[A-Z][A-Z0-9]+-[0-9]+: .*$'
        error: |
          Your commit message and your PR title must follow the format of 'JIRA-123: ' 
          Did you forget to add your jira?
          Did you follow the correct format?
          
          Please follow this format so Jira can auto detect what is in each release.
          The regex is '^[A-Z][A-Z0-9]+-[0-9]+: .*$'
        checkAllCommitMessages: true
        accessToken: ${{ secrets.GITHUB_TOKEN }} # github access token is only required if checkAllCommitMessages is true

    - name: Project Step Calculator
      run: |
        echo "HAS_K8S_DIR=$( [ -d ./k8s ] && echo true || echo false )"
        echo "HAS_K8S_DIR=$( [ -d ./k8s ] && echo true || echo false )" >> $GITHUB_ENV
        echo "HAS_PRE_COMMIT=$( [ -f .pre-commit-config.yaml ] && echo true || echo false )"
        echo "HAS_PRE_COMMIT=$( [ -f .pre-commit-config.yaml ] && echo true || echo false )" >> $GITHUB_ENV
        echo "SNYK_AUTH_TOKEN=${{ secrets.snyk_auth_token }}" >> $GITHUB_ENV

    - name: Set up JDK ${{ inputs.java_version }}
      uses: actions/setup-java@v2
      with:
        java-version: '${{ inputs.java_version }}'
        distribution: 'temurin'
        cache: maven

    - name: 'Setup github packages maven settings file'
      uses: whelk-io/maven-settings-xml-action@v4
      with:
        repositories: '[ { "id": "github", "url": "https://maven.pkg.github.com/coexservices/*" } ]'
        servers: '[ { "id": "github", "username": "${GITHUB_ACTOR}", "password": "${GITHUB_TOKEN}" } ]'

    - uses: snyk/actions/setup@master
    - name: 'Authenticate Snyk CLI'
      run: snyk auth ${SNYK_AUTH_TOKEN}

    - uses: actions/setup-python@v2
      if: env.HAS_PRE_COMMIT == 'true'
    - uses: cloudposse/github-action-pre-commit@v2.1.2  # run pre-commit
      if: env.HAS_PRE_COMMIT == 'true'
      env:
        GITHUB_ACTOR: ${{ secrets.github_repo_actor }}
        GITHUB_TOKEN: ${{ secrets.github_repo_token }}

    - name: Build with Maven
      run: |
        echo Building version ${{github.run_number}}
        mvn versions:set -DnewVersion=${{ github.run_number }}
        mvn clean install -P uberjar --batch-mode
      env:
        GITHUB_ACTOR: ${{ secrets.github_repo_actor }}
        GITHUB_TOKEN: ${{ secrets.github_repo_token }}


    - name: "check sit k8s helm charts"
      if: env.HAS_K8S_DIR == 'true'
      run: |
        docker login syd.ocir.io -u ${{ secrets.docker_username }} -p "${{ secrets.docker_password }}"
        docker run --rm \
          -v "$(pwd):/apps" \
          -w /apps \
          syd.ocir.io/coexservices01/alpine/helm:3.9.0 \
          template -f /apps/k8s/values/values.sit.yaml --set "version=${{ github.run_number }}" /apps/k8s/ --debug

    - name: "check uat k8s helm charts"
      if: env.HAS_K8S_DIR == 'true'
      run: |
        docker run --rm \
          -v "$(pwd):/apps" \
          -w /apps \
          syd.ocir.io/coexservices01/alpine/helm:3.9.0 \
          template -f /apps/k8s/values/values.uat.yaml --set "version=${{ github.run_number }}" /apps/k8s/ --debug

    - name: "check prod k8s helm charts"
      if: env.HAS_K8S_DIR == 'true'
      run: |
        docker run --rm \
          -v "$(pwd):/apps" \
          -w /apps \
          syd.ocir.io/coexservices01/alpine/helm:3.9.0 \
          template -f /apps/k8s/values/values.prod.yaml --set "version=${{ github.run_number }}" /apps/k8s/ --debug
