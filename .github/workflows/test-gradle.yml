name: Test Gradle Project

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      build_args:
        required: false
        type: string
        default: ''
      java_version:
        required: false
        type: string
        default: '17'

jobs:
  test-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: snyk/actions/setup@master
      - name: 'Authenticate Snyk CLI'
        run: snyk auth ${{secrets.SNYK_AUTH_TOKEN}}

      - name: Set up JDK ${{ inputs.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: '${{ inputs.java_version }}'
          distribution: 'temurin'
      - name: 'Setup github packages gradle settings file'
        run: |
          mkdir -p $HOME/.gradle
          echo "allprojects { repositories { mavenCentral(); maven { name \"GitHubPackages\"; url uri(\"https://maven.pkg.github.com/coexservices/*\"); credentials { username githubRepoActor; password githubRepoToken } } } }" > ~/.gradle/init.gradle
          echo "githubRepoActor=${{ secrets.CES_GITHUB_PACKAGES_READ_ACTOR }}" > ~/.gradle/gradle.properties
          echo "githubRepoToken=${{ secrets.CES_GITHUB_PACKAGES_READ_TOKEN }}" >> ~/.gradle/gradle.properties
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: "Build with Gradle | version: ${{ github.run_number }}"
        run: |
          ./gradlew clean build -Pversion=${{github.run_number}} ${{ inputs.build_args }}
      - name: Publish JUnit Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
