name: Build Image

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      build_args:
        required: false
        type: string
        default: ''
      docker_namespace:
        required: false
        type: string
        default: 'syd.ocir.io/coexservices01'
      java_version:
        required: false
        type: string
        default: '17'

env:
  DOCKER_NAMESPACE: ${{ inputs.docker_namespace }}
  DOCKER_REPO: ${{ inputs.app_name }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Project Step Calculator
        run: |
          echo "HAS_GRADLE=$( [ -f build.gradle ] && echo true || echo false )" >> $GITHUB_ENV
          echo "HAS_MAVEN=$( [ -f pom.xml ] && echo true || echo false )" >> $GITHUB_ENV

      # GRADLE
      - name: Set up JDK ${{ inputs.java_version }}
        if: env.HAS_GRADLE == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '${{ inputs.java_version }}'
          distribution: 'temurin'
      - name: 'Setup github packages gradle settings file'
        if: env.HAS_GRADLE == 'true'
        run: |
          mkdir -p $HOME/.gradle
          echo "allprojects { repositories { mavenCentral(); maven { name \"GitHubPackages\"; url uri(\"https://maven.pkg.github.com/coexservices/*\"); credentials { username githubRepoActor; password githubRepoToken } } } }" > ~/.gradle/init.gradle
          echo "githubRepoActor=${{ secrets.CES_GITHUB_PACKAGES_READ_ACTOR }}" > ~/.gradle/gradle.properties
          echo "githubRepoToken=${{ secrets.CES_GITHUB_PACKAGES_READ_TOKEN }}" >> ~/.gradle/gradle.properties
      - name: Setup Gradle
        if: env.HAS_GRADLE == 'true'
        uses: gradle/gradle-build-action@v2
      - name: "Build with Gradle | version: ${{ github.run_number }}"
        if: env.HAS_GRADLE == 'true'
        run: |
          ./gradlew clean build -Pversion=${{github.run_number}} ${{ inputs.build_args }}
        env:
          GITHUB_USERNAME: ${{ secrets.CES_GITHUB_PACKAGES_READ_ACTOR }}
          GITHUB_PASSWORD: ${{ secrets.CES_GITHUB_PACKAGES_READ_TOKEN }}

      # MAVEN
      - name: Set up JDK ${{ inputs.java_version }}
        if: env.HAS_MAVEN == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '${{ inputs.java_version }}'
          distribution: 'temurin'
          cache: maven

      - name: 'Setup github packages maven settings file'
        if: env.HAS_MAVEN == 'true'
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[ { "id": "github", "url": "https://maven.pkg.github.com/coexservices/*" } ]'
          servers: '[ { "id": "github", "username": "${GITHUB_ACTOR}", "password": "${GITHUB_TOKEN}" } ]'

      - name: "Build with Maven | version: ${{ github.run_number }}"
        if: env.HAS_MAVEN == 'true'
        run: |
          mvn --batch-mode versions:set -DnewVersion=${{ github.run_number }}
          mvn --batch-mode clean install ${{ inputs.build_args }}
        env:
          GITHUB_ACTOR: ${{ secrets.CES_GITHUB_PACKAGES_READ_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.CES_GITHUB_PACKAGES_READ_TOKEN }}

      # build image
      - name: Docker Login
        run: |
          docker login syd.ocir.io -u ${DOCKER_USERNAME} -p "${DOCKER_PASSWORD}"
        env:
          DOCKER_USERNAME: ${{ secrets.docker_username }}
          DOCKER_PASSWORD: ${{ secrets.docker_password }}

      - name: Build Image
        run: |
          docker build \
            -t ${DOCKER_NAMESPACE}/${DOCKER_REPO}:${{github.run_number}} \
            -t ${DOCKER_NAMESPACE}/${DOCKER_REPO}:latest \
            -f Dockerfile \
            .

      - name: Push Image
        run: |
          docker push --all-tags ${DOCKER_NAMESPACE}/${DOCKER_REPO}
        env:
          DOCKER_USERNAME: ${{ secrets.docker_username }}
          DOCKER_PASSWORD: ${{ secrets.docker_password }}

      - name: Create github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{github.run_number}}
          target_commitish: ${{ github.sha }}
